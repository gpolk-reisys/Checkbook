CREATE OR REPLACE VIEW processed_payroll_disbursement_mwbe AS
select data_source_code,b.load_id,job_id,b.processed_flag,b.publish_end_time 
from etl.etl_data_load a join etl.etl_data_load_file b 
on a.load_id=b.load_id
 where a.data_source_code in('F','P')
 and b.processed_flag ='Y' group by 1,2,3,4,5




--table for last job processed

CREATE table mwbe_last_job (job_id integer);

insert into mwbe_last_job values (1);

--agency
/*CREATE OR REPLACE VIEW ref_agency_mwbe AS 
 
SELECT a.agency_id, a.agency_name, a.agency_code, a.created_load_id
   FROM ONLY ref_agency a, mwbe_last_job b, etl.etl_data_load c
  
WHERE c.data_source_code::text = 'A'::text AND c.load_id = a.created_load_id AND b.job_id >= c.job_id;*/

  CREATE VIEW ref_agency_mwbe
AS
   SELECT b.agency_id as departmentId,
	  c.agency_name as DeptName ,
          c.agency_code as DeptCode,
          b.load_id
     FROM (SELECT DISTINCT (agency_history_id)
             FROM disbursement_line_item_details
           UNION
           SELECT DISTINCT (agency_history_id) FROM payroll) a
          JOIN ref_agency_history b
             ON a.agency_history_id = b.agency_history_id
          JOIN ref_agency c
             ON b.agency_id = c.agency_id
          JOIN etl.etl_data_load d
             ON d.load_id = c.created_load_id
          JOIN mwbe_last_job e
             ON e.job_id >= d.job_id
   ORDER BY 3;



--department
/*CREATE VIEW ref_department_mwbe AS
SELECT   department_name, department_code, a.agency_id,e.agency_code, d.fund_class_code, fiscal_year, original_department_name, a.created_load_id, a.updated_load_id FROM ONLY ref_department a, 

mwbe_last_job b,etl.etl_data_load c,ref_fund_class d,ref_agency e where c.data_source_code ='A'  and c.load_id =a.created_load_id and b.job_id >=c.job_id and a.fund_class_id = d.fund_class_id and a.agency_id = 

e.agency_id;
*/


CREATE VIEW ref_department_mwbe
AS
   SELECT a.department_id as AppropriationUnitID,b.department_code as AppropriationUnitCode,
                 b.department_name as AppropriationUnitName,c.agency_code as DeptCode, 
	d.fund_class_code as FundClassCode,b.fiscal_year as FiscalYear,
(CASE WHEN b.updated_load_id > b.created_load_id  THEN    b.updated_load_id   ELSE    b.created_load_id   END) AS load_id        
    FROM (SELECT DISTINCT (department_id)
             FROM disbursement_line_item_details
           UNION
           SELECT DISTINCT (department_id) FROM payroll) a
          JOIN ref_department b
             ON a.department_id = b.department_id
          JOIN ref_agency c
             ON b.agency_id = c.agency_id
          JOIN ref_fund_class d
             ON d.fund_class_id = b.fund_class_id
          JOIN etl.etl_data_load e
             ON e.load_id = b.created_load_id
          JOIN mwbe_last_job f
             ON f.job_id >= e.job_id
   ORDER BY 3;

--expenditure
/*CREATE VIEW ref_expenditure_mwbe AS
select  expenditure_object_code,expenditure_object_name,fiscal_year,original_expenditure_object_name,(case when created_load_id>updated_load_id then created_load_id else updated_load_id end) as load_id from 

ref_expenditure_object;*/

CREATE VIEW ref_expenditure_mwbe
AS
   SELECT c.expenditure_object_id as ExpenditureObjID,c.expenditure_object_code as ExpenditureObjCode,
	  c.expenditure_object_name as ExpenditureObjName,c.fiscal_year as FiscalYear,
          (CASE WHEN c.updated_load_id > c.created_load_id
              THEN
                 c.updated_load_id
              ELSE
                 c.created_load_id
           END) AS LoadID
     FROM (SELECT DISTINCT (expenditure_object_history_id)
             FROM disbursement_line_item
           UNION
           SELECT DISTINCT (expenditure_object_history_id)
             FROM payroll_summary) a
          JOIN ref_expenditure_object_history b
             ON a.expenditure_object_history_id =
                   b.expenditure_object_history_id
          JOIN ref_expenditure_object c
             ON b.expenditure_object_id = c.expenditure_object_id
          JOIN etl.etl_data_load d
             ON d.load_id = c.created_load_id
          JOIN mwbe_last_job e
             ON d.job_id <= e.job_id
   ORDER BY 3;


--payroll

/* CREATE VIEW  payroll_mwbe AS
 	SELECT a.payroll_id,pay_cycle_code,
		a.payroll_number,a.job_sequence_number,b.agency_id,a.fiscal_year,
		a.orig_pay_date_id,a.pay_frequency,a.department_history_id,a.annual_salary,
		a.orig_pay_cycle_code,a.agency_code,a.agency_name,a.department_id,
		a.department_code,a.department_name,a.employee_id,a.employee_name,a.fiscal_year_id,
		a.pay_date,a.gross_pay_ytd,a.calendar_fiscal_year_id,a.calendar_fiscal_year,a.gross_pay_cytd,
		a.created_date,a.created_load_id,a.updated_date,
		a.updated_load_id
 	FROM	payroll a join ref_agency b on a.agency_id = b.agency_id
	,mwbe_last_job c 
	where a.created_load_id >=c.job_id or a.updated_load_id >= c.job_id;	
*/

CREATE VIEW  payroll_mwbe AS
SELECT payroll_summary_id as DisbursementID,payroll_number , pay_cycle_code,total_amount as LineItemAmount,6 AS CategoryID,
'Non-MWBE (Ineligible)' as CategoryName,b.agency_id,b.agency_name,d.date,
       c.department_id,c.department_name,a.created_load_id
  FROM payroll_summary a
       JOIN ref_agency_history b
          ON a.agency_history_id = b.agency_history_id
       JOIN ref_department_history c
          ON a.department_history_id = c.department_history_id
       JOIN ref_date d
          ON a.pay_date_id = d.date_id
          JOIN
          (select data_source_code,max(load_id)as load_id from etl.etl_data_load a 
          join mwbe_last_job b on a.job_id <=b.job_id 
          where data_source_code = 'PS' group by 1) e on a.created_load_id = e.load_id;
          

--disbursement

/*CREATE VIEW disbursement_mwbe
AS
 SELECT disbursement_id as DisbursementID,check_eft_issued_date_id as DisbursementDate,disbursement_line_item_id as LineItemNum,
          check_amount as LineItemAmount,
          agency_id  as DepartmentID,
          check_eft_issued_date as Check_Date,
          department_id as appropriationUnitID,vendor_id,location_code,
          agreement_id, expenditure_object_name,
          expenditure_object_code,contract_number,contract_vendor_id,contract_agency_id
          fiscal_year,a.load_id
     FROM disbursement_line_item_details a JOIN (SELECT data_source_code, max(load_id) AS load_id
                  FROM    etl.etl_data_load c
                       JOIN
                          mwbe_last_job d
                       ON c.job_id >= d.job_id
                 WHERE data_source_code = 'F'
                GROUP BY 1) b
             ON b.load_id = a.load_id;*/


CREATE   VIEW  disbursement_mwbe
AS
select 
document_id as DocID,disbursement_id as DisbursementID,rd.date as DisbursementDate,disbursement_line_item_id as LineItemNum,
          check_amount as LineItemAmount,
          agency_id  as DepartmentID,
          agency_name as DeptName,
          agency_code as DeptCode,
          'D' as RecordType,
          a.vendor_id as VendorId,c.vendor_customer_code as VendorCode,(case when b.miscellaneous_vendor_flag = '1' then b.vendor_id else 0 end) as vendor_sub_code ,a.vendor_name::varchar(500) as VendorName,
	  c.minority_type_id as MinoritytypeId,
          minority_type_name as MinorityGroup,
          department_id as appropriationUnitID,
          department_code as appropriationUnitCode,
          location_code,
          expenditure_object_id,
          expenditure_object_name,
          expenditure_object_code,
          fiscal_year,a.load_id
 from disbursement_line_item_details a left join  vendor b on a.vendor_id =b.vendor_id 
				left join fmsv_business_type c on b.vendor_customer_code =c.vendor_customer_code
				left join ref_minority_type d on c.minority_type_id = d.minority_type_id 
				JOIN (SELECT data_source_code, max(load_id) AS load_id
                  FROM    etl.etl_data_load c
                       JOIN  mwbe_last_job d
                       ON c.job_id >= d.job_id
                       WHERE data_source_code in ('F','P')
                GROUP BY 1) e
             ON e.load_id = a.load_id
              join ref_date rd on a.check_eft_issued_date_id = rd.date_id



--vendor
/*
CREATE VIEW vendor_mwbe
AS
   SELECT a.vendor_id as VendorID,a.vendor_customer_code as VendorCode,a.legal_name as VendorName,a.miscellaneous_vendor_flag,
          a.created_load_id as LoadID,c.vendor_business_type_id,d.minority_type_name,
          f.address_line_1 asStreetAddrLine1,f.address_line_2 as StreetAddrLine2,f.city as City,f.state as StateProv,f.zip as PostalCode,f.country as Country
     FROM vendor a
          JOIN (SELECT a.vendor_id,
                       max(vendor_history_id) AS vendor_history_id
                  FROM vendor_history a
                GROUP BY 1) a1
             ON a1.vendor_id = a.vendor_id
          JOIN (SELECT a.vendor_history_id,
                       max(vendor_business_type_id)
                          AS vendor_business_type_id
                  FROM    vendor_history a
                       LEFT JOIN
                          vendor_business_type b
                       ON a.vendor_history_id = b.vendor_history_id
                GROUP BY 1) a2
             ON a1.vendor_history_id = a2.vendor_history_id
          LEFT JOIN vendor_business_type c
             ON a2.vendor_business_type_id = c.vendor_business_type_id
          LEFT JOIN ref_minority_type d
             ON d.minority_type_id = c.minority_type_id
          LEFT JOIN (SELECT a3.vendor_history_id,
                            a3.vendor_address_id,
                            e.address_id
                       FROM    (SELECT a.vendor_history_id,
                                       max(vendor_address_id)
                                          AS vendor_address_id
                                  FROM vendor_address a
                                 WHERE a.address_type_id = 3
                                GROUP BY 1) a3
                            LEFT JOIN
                               vendor_address e
                            ON a3.vendor_address_id = e.vendor_address_id) a4
             ON a2.vendor_history_id = a4.vendor_history_id
          LEFT JOIN address f
             ON f.address_id = a4.address_id;
*/

CREATE VIEW vendor_mwbe
AS
create view vendor_mwbe as 
SELECT 
a.vendor_id as VendorID,a.vendor_customer_code as VendorCode,a.legal_name as VendorName,a.miscellaneous_vendor_flag,
          a.created_load_id as LoadID,
          f.address_line_1 as StreetAddrLine1,f.address_line_2 as StreetAddrLine2,f.city as City,f.state as StateProv,f.zip as PostalCode,f.country as Country
          FROM vendor a 
		   left join (SELECT a.vendor_id,
                       max(vendor_history_id) AS vendor_history_id
                  FROM vendor_history a
                GROUP BY 1) a1
             ON a1.vendor_id = a.vendor_id
		left join		   
		  (SELECT a2.vendor_history_id,
                            a2.vendor_address_id,
                            e.address_id
                       FROM    (SELECT a.vendor_history_id,
                                       max(vendor_address_id)
                                          AS vendor_address_id
                                  FROM vendor_address a
                                 WHERE a.address_type_id = 2
                                GROUP BY 1) a2
                            LEFT JOIN
                               vendor_address e
                            ON a2.vendor_address_id = e.vendor_address_id) a3
                            on a1.vendor_history_id = a3.vendor_history_id
			left join address f on f.address_id = a3.address_id







--contract 


/*CREATE OR REPLACE VIEW agreement_mwbe AS 
 SELECT COALESCE(a.contract_number, b.contract_number) AS contractid, 
  COALESCE(a.document_id, b.document_id) AS docid,
  COALESCE(a.effective_begin_date_id, b.effective_begin_date_id) AS contract_start_date, 
  COALESCE(a.effective_end_date_id, b.effective_end_date_id) AS contract_end_date, 
  COALESCE(a.description, b.description) AS purpose, a.maximum_contract_amount,
  COALESCE(a.agency_history_id, b.agency_history_id) AS agency_history_id, 
  COALESCE(a.vendor_history_id, b.vendor_history_id) AS vendor_id
FROM history_agreement a
   JOIN history_master_agreement b ON a.master_agreement_id = b.master_agreement_id
   JOIN etl.etl_data_load c ON c.load_id = COALESCE(a.created_load_id, b.created_load_id)
   JOIN mwbe_last_job d ON c.job_id >= d.job_id;
*/



CREATE  VIEW disbursement_agreement_mwbe AS 
 SELECT COALESCE(a.contract_number,b.contract_number)::varchar(25) AS AgreementID, 
	x.document_code as AgreementDocCode,
	COALESCE(a.document_id, b.document_id) AS AgreementDocID,
    COALESCE(a.effective_begin_date_id, b.effective_begin_date_id) AS AgreementStartDate, 
  COALESCE(a.effective_end_date_id, b.effective_end_date_id) AS AgreementEndDate, 
  COALESCE(a.description, b.description) AS AgreementPurpose, a.maximum_contract_amount as MaximumAgreementamount,
  z.agency_id,
  z.agency_code  as AgreementDeptCode, 
  d1.disbursement_id as DisbursementID,
  d1.created_load_id
FROM  history_agreement a 
   JOIN history_master_agreement b ON a.master_agreement_id = b.master_agreement_id
   JOIN etl.etl_data_load c ON c.load_id = COALESCE(a.created_load_id, b.created_load_id)
   JOIN ref_document_code x on x.document_code_id = COALESCE(a.document_code_id, b.document_code_id)
   JOIN ref_agency_history y on y.agency_history_id = COALESCE(a.agency_history_id, b.agency_history_id)
   JOIN ref_agency z on y.agency_id = z.agency_id
   JOIN vendor_history y1 on y1.vendor_history_id = COALESCE(a.vendor_history_id, b.vendor_history_id)
   JOIN vendor z1 on z1.vendor_id =y1.vendor_id
   JOIN mwbe_last_job d ON c.job_id >= d.job_id
  JOIN disbursement_line_item d1 on d1.reference_document_number = Coalesce(a.contract_number,b.contract_number)





-- minority type

create or replace view minoirty_mwbe
as select * from ref_minority_type order by 1





-- industry type 



create or replace view industry_type_mwbe as 
select * from ref_industry_type order by 1






--disbursement address


create view disbursement_address_mwbe as
SELECT x.disbursement_id,a.vendor_id as VendorID,a.vendor_customer_code as VendorCode,a.legal_name as VendorName,
        f.address_line_1 as StreetAddrLine1,f.address_line_2 as StreetAddrLine2,f.city as City,f.state as StateProv,f.zip as PostalCode,f.country as Country,a.created_load_id as LoadID
          FROM disbursement_line_item_details x left join vendor a  on x.vendor_id = a.vendor_id join fmsv_business_type c on a.vendor_customer_code = c.vendor_customer_code  
		     left join (SELECT a.vendor_id,
                       max(vendor_history_id) AS vendor_history_id
                  FROM vendor_history a
                GROUP BY 1) a1
             ON a1.vendor_id = a.vendor_id
		left join		   
		  (SELECT a2.vendor_history_id,
                            a2.vendor_address_id,
                            e.address_id
                       FROM    (SELECT a.vendor_history_id,
                                       max(vendor_address_id)
                                          AS vendor_address_id
                                  FROM vendor_address a
                                 WHERE a.address_type_id = 2
                                GROUP BY 1) a2
                            LEFT JOIN
                               vendor_address e
                            ON a2.vendor_address_id = e.vendor_address_id) a3
                            on a1.vendor_history_id = a3.vendor_history_id
			left join address f on f.address_id = a3.address_id



-- disbursement industry type


create view  disbursement_industry_mwbe as 
select disbursement_id as DisbursementID,disbursement_line_item_id as LineItemNum,b.industry_type_id,b.industry_type_name,a.created_load_id 
from disbursement_line_item a join agreement_snapshot b on a.reference_document_number = b.contract_number 






-- vendor address mwbe

create view vendor_address_mwbe
as
select  
v.vendor_id,v.vendor_customer_code as VendorCode,v.legal_name as VendorName,v.miscellaneous_vendor_flag,
v.created_load_id as LoadID,c.address_line_1 as StreetAddrLine1,c.address_line_2 as StreetAddrLine2,c.city as City,c.state as StateProv,c.zip as PostalCode,c.country as Country
from vendor v ,
(select vendor_id,max(b.vendor_history_id) as vendor_history_id from vendor_history a join vendor_address b on a.vendor_history_id =b.vendor_history_id where address_type_id =2 group by 1)x ,
vendor_address  va, address c
WHERE v.vendor_id = x.vendor_id AND x.vendor_history_id = va.vendor_history_id AND va.address_id = c.address_id