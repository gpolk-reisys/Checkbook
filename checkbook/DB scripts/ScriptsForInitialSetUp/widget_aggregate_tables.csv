widget_name,aggregate_table_name,query1,query2
SpendingByCOAEntitiesAndFiscalYear,aggregateon_spending_coa_entities,"SELECT department_id,agency_id,
       spending_category_id,
       expenditure_object_id,       
       month_id,
       year_id,
       'B' as type_of_year,
       sum(total_spending_amount) total_spending_amount,
       sum(contract_amount) total_contract_amount
  FROM (SELECT agency_id,
               (CASE
                   WHEN     COALESCE(master_agreement_id, agreement_id) > 0
                        AND b.fund_class_code in ('400','402')
                   THEN
                      3
                   WHEN     COALESCE(master_agreement_id, agreement_id) > 0
                        AND b.fund_class_code not in ('400','402')
                   THEN
                      1
                   ELSE
                      4
                END)
                  AS spending_category_id,
               expenditure_object_id,
               department_id,
               COALESCE(master_agreement_id, agreement_id) AS agreement_id,
               check_eft_issued_cal_month_id AS month_id,
               check_eft_issued_nyc_year_id AS year_id,
               sum(check_amount) AS total_spending_amount,
               MIN(
                  CASE
                     WHEN master_agreement_id > 0 THEN maximum_spending_limit
                     WHEN agreement_id > 0 THEN maximum_contract_amount
                     ELSE 0
                  END)
                  AS contract_amount
          FROM disbursement_line_item_details a
          JOIN ref_fund_class b ON a.fund_class_id = b.fund_class_id 
  GROUP BY 1,2,3,4,5,6,7) X
  GROUP BY 1,2,3,4,5,6,7","SELECT department_id,agency_id,
       spending_category_id,
       expenditure_object_id,       
       month_id,
       year_id,
       'C' as type_of_year,
       sum(total_spending_amount) total_spending_amount,
       sum(contract_amount) total_contract_amount
  FROM (SELECT agency_id,
               (CASE
                   WHEN     COALESCE(master_agreement_id, agreement_id) > 0
                        AND b.fund_class_code in ('400
','402')
                   THEN
                      3
                   WHEN     COALESCE(master_agreement_id, agreement_id) > 0
                        AND b.fund_class_code not in ('400','402')
                   THEN
                      1
                   ELSE
                      4
                END)
                  AS spending_category_id,
               expenditure_object_id,
               department_id,
               COALESCE(master_agreement_id, agreement_id) AS agreement_id,
               check_eft_issued_cal_month_id AS month_id,
               calendar_fiscal_year_id AS year_id,
               sum(check_amount) AS total_spending_amount,
               MIN(
                  CASE
                     WHEN master_agreement_id > 0 THEN maximum_spending_limit
                     WHEN agreement_id > 0 THEN maximum_contract_amount
                     ELSE 0
                  END)
                  AS contract_amount
          FROM disbursement_line_item_details a
          JOIN ref_fund_class b ON a.fund_class_id = b.fund_class_id 
  GROUP BY 1,2,3,4,5,6,7) X
  GROUP BY 1,2,3,4,5,6,7"
SpendingByVendorId,aggregateon_spending_vendor,"SELECT vendor_id, agency_id,       
       month_id,
       year_id,
       'B' as type_of_year,
       sum(total_spending_amount) total_spending_amount,
       sum(contract_amount) total_contract_amount
  FROM (SELECT agency_id,
               vendor_id,
               check_eft_issued_cal_month_id as month_id,
               check_eft_issued_nyc_year_id AS year_id,
               COALESCE(master_agreement_id, agreement_id) AS agreement_id,
               sum(check_amount) AS total_spending_amount,
               MIN(
                  CASE
                     WHEN master_agreement_id > 0 THEN maximum_spending_limit
                     WHEN agreement_id > 0 THEN maximum_contract_amount
                     ELSE 0
                  END)
                  AS contract_amount
          FROM    disbursement_line_item_details a
GROUP BY 1,2,3,4,5) X
GROUP BY 1,2,3,4,5","SELECT vendor_id, agency_id,       
       month_id,
       year_id,
       'C' as type_of_year,
       sum(total_spending_amount) total_spending_amount,
       sum(contract_amount) total_contract_amount
  FROM (SELECT agency_id,
               vendor_id,
               check_eft_issued_cal_month_id as month_id,
               calendar_fiscal_year_id AS year_id,
               COALESCE(master_agreement_id, agreement_id) AS agreement_id,
               sum(check_amount) AS total_spending_amount,
               MIN(
                  CASE
                     WHEN master_agreement_id > 0 THEN maximum_spending_limit
                     WHEN agreement_id > 0 THEN maximum_contract_amount
                     ELSE 0
                  END)
                  AS contract_amount
          FROM    disbursement_line_item_details a
GROUP BY 1,2,3,4,5) X
GROUP BY 1,2,3,4,5"
SpendingByContractId,aggregateon_spending_contract,"SELECT a.agreement_id, 
	a.document_id,
	a.vendor_id,
	a.agency_id,
       a.description,
       b.check_eft_issued_nyc_year_id AS year_id,
       'B' as type_of_year,
       sum(b.check_amount) AS total_spending_amount,
       MIN(a.maximum_contract_amount) AS total_contract_amount
  FROM fact_agreement a
       JOIN disbursement_line_item_details b
          ON COALESCE(b.master_agreement_id, b.agreement_id) =
                a.agreement_id
GROUP BY 1,2,3,4,5,6","SELECT a.agreement_id, 
	a.document_id,
	a.vendor_id,
	a.agency_id,
       a.description,
       b.calendar_fiscal_year_id AS year_id,
       'C' as type_of_year,
       sum(b.check_amount) AS total_spending_amount,
       MIN(a.maximum_contract_amount) AS total_contract_amount
  FROM fact_agreement a
       JOIN disbursement_line_item_details b
          ON COALESCE(b.master_agreement_id, b.agreement_id) =
                a.agreement_id
GROUP BY 1,2,3,4,5,6"
RevenueByCategoryId,aggregateon_revenue_category,"SELECT b.revenue_category_id, fiscal_period::smallint,
       budget_fiscal_year_id, SUM(posting_amount) as posting_amount,
       0 as adopted_budget,
       0 as current_modified_budget
FROM   revenue_details a LEFT JOIN ref_revenue_source b ON a.revenue_source_id = b.revenue_source_id
GROUP BY 1,2,3;",
RevenueByFundingClassId,aggregateon_revenue_funding_class,"SELECT b.funding_class_id,fiscal_period::smallint,
       a.budget_fiscal_year_id, SUM(posting_amount) as posting_amount,
       0 as adopted_budget,
       0 as current_modified_budget
FROM   revenue_details a LEFT JOIN ref_revenue_source b ON a.revenue_source_id = b.revenue_source_id
GROUP BY 1,2,3;",
SpendingByVendorExpObject,aggregateon_spending_vendor_exp_object,"SELECT vendor_id,expenditure_object_id,
 check_eft_issued_nyc_year_id AS year_id, 'B' as type_of_year,SUM(check_amount) as total_spending_amount
 FROM disbursement_line_item_details
GROUP BY 1,2,3;","SELECT vendor_id,expenditure_object_id,
 calendar_fiscal_year_id AS year_id,  'C' as type_of_year,SUM(check_amount) as total_spending_amount
 FROM disbursement_line_item_details
GROUP BY 1,2,3;"
PayrollByEmployeeAgency,aggregateon_payroll_employee_agency,"SELECT e.employee_id,e.agency_id,e.fiscal_year_id,'B' as type_of_year,
	pay_frequency,
	type_of_employment,
	start_date,
	annual_sal_table.annual_salary,		
	base_pay,
	overtime_pay,
	other_payments,
	gross_pay_ytd	
FROM
(SELECT employee_id,agency_id,fiscal_year_id,
	pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,		
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll p
JOIN ref_amount_basis z ON p.amount_basis_id = z.amount_basis_id		 
GROUP BY 1,2,3,4,5) e JOIN (SELECT d.employee_id,d.agency_id,d.fiscal_year_id,d.annual_salary
		     FROM (SELECT employee_id,agency_id,fiscal_year_id,max(pay_date) as pay_date
		     	   FROM payroll a 
		           GROUP BY 1,2,3) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.agency_id = c.agency_id 
					     AND d.fiscal_year_id = c.fiscal_year_id
					     AND d.pay_date = c.pay_date) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.agency_id = annual_sal_table.agency_id 
		     			AND e.fiscal_year_id = annual_sal_table.fiscal_year_id		     			
	JOIN (SELECT employee_id, agency_id,min(pay_date) as start_date
	      FROM   payroll
	      GROUP BY 1,2) as start_date_table ON e.employee_id = start_date_table.employee_id
		     			AND e.agency_id = start_date_table.agency_id;","SELECT e.employee_id,e.agency_id,e.calendar_fiscal_year_id,'C' as type_of_year,
	pay_frequency,
	type_of_employment,
	start_date,
	annual_sal_table.annual_salary,		
	base_pay,
	overtime_pay,
	other_payments,
	gross_pay_ytd	
FROM
(SELECT employee_id,agency_id,calendar_fiscal_year_id,
	pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,		
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll p
JOIN ref_amount_basis z ON p.amount_basis_id = z.amount_basis_id		 
GROUP BY 1,2,3,4,5) e JOIN (SELECT d.employee_id,d.agency_id,d.calendar_fiscal_year_id,d.annual_salary
		     FROM (SELECT employee_id,agency_id,calendar_fiscal_year_id,max(pay_date) as pay_date
		     	   FROM payroll a 
		           GROUP BY 1,2,3) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.agency_id = c.agency_id 
					     AND d.calendar_fiscal_year_id = c.calendar_fiscal_year_id
					     AND d.pay_date = c.pay_date) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.agency_id = annual_sal_table.agency_id 
		     			AND e.calendar_fiscal_year_id = annual_sal_table.calendar_fiscal_year_id		     			
	JOIN (SELECT employee_id, agency_id,min(pay_date) as start_date
	      FROM   payroll
	      GROUP BY 1,2) as start_date_table ON e.employee_id = start_date_table.employee_id
		     			AND e.agency_id = start_date_table.agency_id;"	
PayrollByAgency,aggregateon_payroll_agency,"SELECT agency_id,fiscal_year_id,'B' as type_of_year, 
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_id END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3; ","SELECT agency_id,calendar_fiscal_year_id,'C' as type_of_year, 
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_id END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3; "
PayrollByEmployeeDept,aggregateon_payroll_employee_dept,"SELECT e.employee_id,e.agency_id,e.department_id,e.fiscal_year_id,'B' as type_of_year,
	min(annual_sal_table.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e JOIN (SELECT d.employee_id,d.payroll_number,d.job_sequence_number,d.fiscal_year,d.annual_salary
		     FROM (SELECT employee_id,payroll_number,job_sequence_number,fiscal_year,max(pay_date) as pay_date
		     	   FROM payroll a 
		     	   JOIN ref_amount_basis f ON a.amount_basis_id = f.amount_basis_id
		     	   WHERE amount_basis_name ='ANNUAL'
		           GROUP BY 1,2,3,4) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.payroll_number = c.payroll_number 
					     AND d.job_sequence_number = c.job_sequence_number
					     AND d.fiscal_year = c.fiscal_year
					     AND d.pay_date = c.pay_date) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.fiscal_year = annual_sal_table.fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id	
	WHERE amount_basis_name ='ANNUAL' 
GROUP BY 1,2,3,4;","SELECT e.employee_id,e.agency_id,e.department_id,e.calendar_fiscal_year_id,'C' as type_of_year,
	min(annual_sal_table.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e JOIN (SELECT d.employee_id,d.payroll_number,d.job_sequence_number,d.calendar_fiscal_year,d.annual_salary
		     FROM (SELECT employee_id,payroll_number,job_sequence_number,calendar_fiscal_year,max(pay_date) as pay_date
		     	   FROM payroll a 
		     	   JOIN ref_amount_basis f ON a.amount_basis_id = f.amount_basis_id
		     	   WHERE amount_basis_name ='ANNUAL'
		           GROUP BY 1,2,3,4) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.payroll_number = c.payroll_number 
					     AND d.job_sequence_number = c.job_sequence_number
					     AND d.calendar_fiscal_year = c.calendar_fiscal_year
					     AND d.pay_date = c.pay_date) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.calendar_fiscal_year = annual_sal_table.calendar_fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id	
	WHERE amount_basis_name ='ANNUAL' 
GROUP BY 1,2,3,4;"
PayrollByDept,aggregateon_payroll_dept,"SELECT agency_id,department_id,fiscal_year_id,'B' as type_of_year, 
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_id END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3,4;","SELECT agency_id,department_id,calendar_fiscal_year_id,'C' as type_of_year, 
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_id END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_id END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_id END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3,4;"